df_project <- read.csv("~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/2007.csv")
View(head(df_project,10))
library("table")
library("data.table")
libarry('data.table')
libary('data.table')
library('data.table')
df_project <- read.csv("~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/2007.csv")
#Playground
df_project <- as.data.table(df_project)
tmp <- df_project[df_project$Year != 2007, "Year"]
View(tmp)
View(tmp)
View(head(df_project,10))
#Results
num_of_flights_daily <- function(dataFrame){
#Uses data.table package
#returns (idk)
result <- as.data.table(dataFrame)[,.(Month, DayofMonth, "Count" = .N),
keyby = .(Month, DayofMonth)]
}
rm(tmp)
tmp <- num_of_flights_daily(df_project)
View(tmp)
View(tmp)
class(tmp)
tmp[(Month == 9 || DayofMonth == 11),]
tmp[(Month == 9 & DayofMonth == 11),]
mean(tmp$Count)
#Uses data.table package
#returns a data.table
dataFrame <- df_project
result <- as.data.table(dataFrame)
rm(.(dataFrame,result))
rm(.("dataFrame","result"))
rm(dataFrame)
rm(result)
colnames(df_project)
paste(colnames(df_project), collapse = ', ')
cancellations_stats <- function(dataFrame){
#Uses data.table package
#returns a data.table
#Useful columns: Cancelled, CancellationCode
result <- as.data.table(dataFrame)[(Cancelled != 0),
.(CancellationCode, "Count" = .N),
keyby = CancellationCode]
result <- result[order(Count, decreasing = T),]
}
cancelled <- cancellations_stats(df_project)
View(cancelled)
View(tmp)
View(tmp)
num_of_flights_daily <- function(dataFrame){
#Uses data.table package
#returns a data.table with grouped rows by month and day values
result <- as.data.table(dataFrame)[,.("Count" = .N),
keyby = .(Month, DayofMonth)]
}
cancellations_stats <- function(dataFrame){
#Uses data.table package
#returns a data.table
#Useful columns: Cancelled, CancellationCode
result <- as.data.table(dataFrame)[(Cancelled != 0),
.("Count" = .N),
keyby = CancellationCode]
result <- result[order(Count, decreasing = T),]
}
tmp <- num_of_flights_daily(df_project)
class(tmp)
tmp[(Month == 9 & DayofMonth == 11),]
mean(tmp$Count)
cancelled <- cancellations_stats(df_project)
View(cancelled)
install.packages('Dict')
library('Dict')
n_codes <- Dict$new(
"A" = "przewoźnik",
"B" = "pogoda",
"C" = "NAS",
"D" = "bezpieczeństwo")
cancelled[CancelationCode,CancellationCode] <- cancelled[result[CancelationCode,
CancellationCode]]
cancelled[CancelationCode,CancellationCode] <- n_codes[cancelled[CancelationCode,
CancellationCode]]
cancelled[,CancellationCode] <- n_codes[cancelled[,CancellationCode]]
n_codes[cancelled[,CancellationCode]]
n_codes[cancelled[1:length(cancelled$CancellationCode),CancellationCode]]
cancelled[n_codes$keys,CancellationCode]]
cancelled[n_codes$keys,CancellationCode]
for(row in 1:length(cancelled)){
cancelled[row,CancellationCode] <- n_codes[cancelled[row,CancellationCode]]
}
for(row in 1:length(cancelled)){
cancelled[row,CancellationCode] <- n_codes[cancelled[row,CancellationCode, drop = T]]
}
row <- 1
cancelled[row,CancellationCode] <- n_codes$get(cancelled[row,CancellationCode, drop = T])
n_codes$get(cancelled[row,CancellationCode, drop = T])
n_codes$get(cancelled[,CancellationCode, drop = T])
lapply(cancelled$CancellationCode, n_codes$get)
unlist(lapply(cancelled$CancellationCode, n_codes$get))
cancelled["CodeToName"] = unlist(lapply(cancelled$CancellationCode, n_codes$get))
View(cancelled)
for(value in cancelled$CancellationCode){
value <- n_codes$get(value)
}
cancelled <- cancellations_stats(df_project)
for(value in cancelled$CancellationCode){
value <- n_codes$get(value)
}
View(cancelled)
for(value in cancelled$CancellationCode){
cancelled[CancelllationCode == value, CancellationCode] <- n_codes$get(value)
}
for(value in cancelled$CancellationCode){
cancelled[CancellationCode == value, CancellationCode] <- n_codes$get(value)
}
cancelled[CancellationCode == value, .(CancellationCode)] <- n_codes$get(value)
cancelled[CancellationCode == value, "CancellationCode"] <- n_codes$get(value)
class(cancelled)
View(cancelled)
View(cancelled)
for(row in 1:length(cancelled$Count)){
value <- cancelled[row,CancellationCode]
cancelled[CancellationCode == value, "CancellationCode"] <- n_codes$get(value)
}
for(row in 1:length(cancelled$Count)){
value <- cancelled[row,"CancellationCode"]
cancelled[CancellationCode == value, "CancellationCode"] <- n_codes$get(value)
}
View(value)
for(row in 1:length(cancelled$Count)){
value <- cancelled[row,"CancellationCode", drop = T]
cancelled[CancellationCode == value, "CancellationCode"] <- n_codes$get(value)
}
value <- cancelled[row,"CancellationCode", drop = T]
View(value)
cancelled[1,1]
cancelled$CancellationCode[1]
for(row in 1:length(cancelled$Count)){
value <- cancelled$CancellationCode[row]
cancelled[CancellationCode == value, "CancellationCode"] <- n_codes$get(value)
}
for(row in 1:length(cancelled$Count)){
value <- cancelled$CancellationCode[row]
cancelled$CancellationCode[row] <- n_codes$get(value)
}
cancelled <- cancellations_stats(df_project)
for(row in 1:length(cancelled$Count)){
value <- cancelled$CancellationCode[row]
cancelled$CancellationCode[row] <- n_codes$get(value)
}
class(cancelled)
rm(row,value)
hist(cancelled$CancellationCode, cancelled$Count)
hist(factor(cancelled$CancellationCode), cancelled$Count)
barplot(cancelled)
barplot(as.table(cancelled))
?matplot
matplot(cancelled$CancellationCode, cancelled$Count, type ='h')
plot(cancelled$CancellationCode, cancelled$Count, type ='h')
2*pi
plot.new()
plot.window(xlim = c(0,2*pi), ylim = c(-1,1))
plot(cancelled$CancellationCode, cancelled$Count, type ='h')
plot(cancelled$CancellationCode, cancelled$Count, type ='h',
xlim = length(cancelled$CancellationCode))
xlim = c(0,length(cancelled$CancellationCode))
plot(cancelled$CancellationCode, cancelled$Count,)
rm(row,value,xlim)
plot(cancelled$CancellationCode, cancelled$Count,
col = factor(cancelled$CancellationCode))
plot(cancelled$CancellationCode, cancelled$Count,
col = factor(cancelled$CancellationCode),
pch = 1)
plot(factor(cancelled$CancellationCode), cancelled$Count,
col = factor(cancelled$CancellationCode),
pch = 1)
plot(factor(cancelled$CancellationCode), cancelled$Count,
col = factor(cancelled$CancellationCode),
typ = 'h')
plot(factor(cancelled$CancellationCode), cancelled$Count,
col = factor(cancelled$CancellationCode),
type = 'h')
plot(factor(cancelled$CancellationCode), cancelled$Count,
type = 'h')
?plot
plot(factor(cancelled$CancellationCode), cancelled$Count,
type = "h",
col = "red",
lwd = 10)
plot.new()
plot(factor(cancelled$CancellationCode), cancelled$Count,
type = "h",
col = "red",
lwd = 10)
plot(table(cancelled$CancellationCode, cancelled$Count)
type = "h",
plot(table(cancelled$CancellationCode, cancelled$Count),
type = "h",
col = "red")
plot(as.matrix(cancelled$CancellationCode, cancelled$Count),
type = "h",
col = "red")
plot(as.matrix(factor(cancelled$CancellationCode), cancelled$Count),
type = "h",
col = "red")
plot(as.matrix(as.numeric(factor(cancelled$CancellationCode)), cancelled$Count),
type = "h",
col = "red")
as.matrix(as.numeric(factor(cancelled$CancellationCode))
)
as.matrix(as.numeric(factor(cancelled$CancellationCode)), cancelled$Count)
as.matrix.data.frame(cancelled)
mt <- as.matrix.data.frame(cancelled)
plot(mt,
type = "h",
col = "red")
?plot
?matrix
mt <- cbind(matrix(factor(cancelled$CancellationCode),ncol = 1),
matrix(cancelled$Count,ncol = 1))
plot.new()
plot(mt,
type = "h",
col = "red",
xlab = cancelled$CancellationCode)
mt
mt <- cbind(matrix(as.numeric(factor(cancelled$CancellationCode)),ncol = 1),
matrix(cancelled$Count,ncol = 1))
mt
plot(mt,
type = "h",
col = "red",
xlab = cancelled$CancellationCode)
?plot
plot.new()
plot(mt,
type = "h",
col = "red",
lwd = 10)
plot(as.numeric(factor(cancelled$CancellationCode)),cancelled$Count,
type = "h",
col = "red",
lwd = 10)
?plot.window
plot(factor(cancelled$CancellationCode),cancelled$Count,
type = "h",
col = "red",
lwd = 10)
hist(as.numeric(factor(cancelled$CancellationCode)),cancelled$Count,
col = "red",
lwd = 10)
plot(as.numeric(factor(cancelled$CancellationCode)),cancelled$Count,
type = "h",
col = "red",
lwd = 10)
?hist
?plot
?barplot
barplot(mt)
barplot(mt,beside = T)
mt <- as.matrix.data.frame(cancelled)
barplot(mt,beside = T)
tab <- table(cancelled$CancellationCode)
tab
?table
tab <- table(cancelled$CancellationCode, cancelled%Count)
tab <- table(cancelled$CancellationCode, cancelled$Count)
tab
tab <- as.table(matrix(cancelled$Count, nrow = 1))
tab
colnames(tab) <- cancelled$CancellationCode
tab
row.names(tab) <- c("Count")
tab
barplot(tab,beside = T)
barplot(tab,beside = T, col = c("green", "blue", "yellow", "red"))
#######
urls <- c("https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/HG7NV7/YGU3TD")
dest <- "~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane"
massDownload(urls,dest)
massDownload <- function(urls,
outdir,
quiet = FALSE,
file_names = NULL,
ext ='.csv.bz2'){
#this function was written during PDU class
#returns logical vector showing which files were successfully downloaded
info <- logical(length(urls))
names(info) <- urls
if(!dir.exists(outdir)){
warning("NOWY katalog zostal stworzony!")
dir.create(outdir, recursive = TRUE)
}
if(is.null(file_names) || length(file_names) != length(urls) ){
file_names <-  1:length(urls)
}
outputs <- file.path(outdir, paste(file_names, ext, sep = ''))
for( i in 1:length(urls)){
tryCatch(
expr = {
download.file(urls[i], outputs[i], quiet = quiet)
TRUE
},
error = function(e) {
FALSE
}
) -> info[i]
}
invisible(info)
}
massDownload(urls,dest)
massDownload <- function(urls,
outdir,
quiet = FALSE,
file_names = NULL,
ext ='.csv.bz2'){
#this function was written during PDU class
#returns logical vector showing which files were successfully downloaded
options(timeout = 300)
info <- logical(length(urls))
names(info) <- urls
if(!dir.exists(outdir)){
warning("NOWY katalog zostal stworzony!")
dir.create(outdir, recursive = TRUE)
}
if(is.null(file_names) || length(file_names) != length(urls) ){
file_names <-  1:length(urls)
}
outputs <- file.path(outdir, paste(file_names, ext, sep = ''))
for( i in 1:length(urls)){
tryCatch(
expr = {
download.file(urls[i], outputs[i], quiet = quiet)
TRUE
},
error = function(e) {
FALSE
}
) -> info[i]
}
invisible(info)
}
massDownload(urls,dest)
file_names <- c("2000")
massDownload(urls,dest, file_names = file_names)
test_f <- file.path(dest, "2000.csv.bz2")
test_f
?system2
system2("bzip2 -d %s", test_f)
system2(sprintf("bzip2 -d %s", test_f))
test_f <- file.path("Dane/", "2000.csv.bz2")
old_wd <- getwd()
getwd()
system2("cd ..")
system2("cd \\.\\.")
system2("cd //.//.")
unzip(test_f)
test_f2 <- file.path(dest, "2007.csv")
df <- read.csv(test_f2)
rm(df)
sprintf("bzip2 -d %s", test_f)
test_f <- file.path(dest, "2000.csv.bz2")
sprintf("bzip2 -d %s", test_f)
?system
system2("ls -l")
system2("ls -a")
system2("zsh ls -l")
system2("echo")
?system2
system2("ls", args = character('a'))
system2("ls", args = "a")
system2("ls", args = "-a")
system2("ls", args = "-a .")
system2("ls", args = "-a ..")
system2("rm", args = file.path(dest, "2000.csv"))
combn(2,letters[1:3])
paste(letters[1:3], letters[1:3], sep = "")
paste(rep(letters[1:3], each = 4), letters[1:3], sep = "")
matrix(paste(rep(letters[1:3], each = 4), letters[1:3], sep = ""), nrow = 4)
matrix(paste(rep(letters[1:4], each = 4), letters[1:4], sep = ""), nrow = 4)
matrix(paste(letters[1:4], rep(letters[1:4], each = 4), sep = ""), nrow = 4)
tab = matrix(paste(letters[1:4], rep(letters[1:4], each = 4), sep = ""), nrow = 4)
for (i in 1:4) {
}
for (i in 1:4) {
for(j in 1:4){}
}
for (i in 1:4) {
for(j in 1:4){}
}
strsplit("10000442011","")
x= strsplit("10000442011","")
x= strsplit("10000442011","")[1]
x= strsplit("10000442011","")[[1]]
paste(x, collapse = ",")
x= strsplit("0 1 0 0 0 3 0 2 2 1 0"," ")[[1]]
paste(x, collapse = ",")
x= strsplit("00100201111","")[[1]]
paste(x, collapse = ",")
x= strsplit("00011000430","")[[1]]
paste(x, collapse = ",")
