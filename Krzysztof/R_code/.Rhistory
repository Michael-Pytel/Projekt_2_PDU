assign(df_name, as.data.table(read.csv(paste(data_dir,
paste("df_",
y,
".csv",
sep = ""),
sep = ""))))
cat("Reading data complete\n")
cancellation_sources["Total"] <-cancellation_sources$Total + get(df_name)[!is.na(CancellationCode), .(Count)]
gc()
}
for(y in 2003:2008){
cat(paste("current year: ", y,"\n", sep = ""))
df_name <- paste("df2_", y, sep = "")
assign(df_name, as.data.table(read.csv(file.path(data_dir,
paste("df_",
y,
".csv",
sep = "")
)
)
)
)
cat("Reading data complete\n")
cancellation_sources["Total"] <-cancellation_sources$Total + get(df_name)[!is.na(CancellationCode), .(Count)]
gc()
}
#changing CancellationCode values
n_codes <- Dict$new(
"A" = "przewoźnik",
"B" = "pogoda",
"C" = "NAS",
"D" = "bezpieczeństwo")
for(row in 1:length(cancellation_sources$Code)){
value <- cancellation_sources$Code[row]
cancellation_sources$Code[row] <- n_codes$get(value)
}
ggplot(data = cancellation_sources,
aes(reorder(Code, Total), Total, fill = Code))+
geom_col() +
scale_y_continuous(expand = c(0, 0),
limits = c(0, max(cancellation_sources$Total) + 30000))+
geom_text(aes(label = Total),
angle = 0,
vjust = -0.5) +
theme_gray()+
ggtitle("Liczba odwołanych lotów o danym kodzie odwołania (suma z lat 2003:2008)")+
xlab("Kod odwołania")+
ylab("Loty")+
labs(fill = "Kod")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 20),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text( family = "Arial"))
library('usmap')
library('data.table')
library(ggplot2)
library(ggrepel)
rm(list = ls())
data_dir <-"~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/"
years_dir <- paste(data_dir,"pliczki/", sep = "")
airports <- as.data.table(read.csv(file.path(data_dir, "airports.csv")))
ap <- airports[airports$country == "USA", .("lon" = long, lat, iata)]
ap_transformed <- usmap_transform(ap)
###preparing first frame
df_1996 <- as.data.table(read.csv(file.path(years_dir,"1996.csv")))
df_1996 <- df_1996[, .( "totalFlights" = .N), keyby = .(Origin,Dest)]
df_1996 <- df_1996[order(totalFlights, decreasing = T),]
#merging routes (adding count of flights in both ways on the same route/path)
df_1 <- df_1996[,.(Origin,Dest, totalFlights, "Route" = paste(Origin,Dest))]
df_2 <- df_1996[,.(totalFlights,
"Route" = paste(Dest,Origin))]
total_routes <- merge.data.table(df_1,df_2,
by = c("Route")
)
route <- total_routes$Route
origin <- substring(route,1,3)
destination <- substring(route,5,7)
idx <-  (origin > destination)
total_routes <- total_routes[idx,]
total_routes <- total_routes[,.("totalFlights" = sum(totalFlights.x,totalFlights.y)),
keyby = .(Origin,Dest)]
total_routes <- total_routes[order(totalFlights,decreasing = T),]
s <- c(1996) # for setting suffixes in merge() function
for(y in 1997:2008){
cat(paste("current year: ", y,"\n", sep = ""))
df_name <- paste("df_", y, sep = "")
assign(df_name, as.data.table(read.csv(file.path(years_dir,
paste(y,
".csv",
sep = "")))))
cat("Reading data complete\n")
assign(df_name,get(df_name)[, .( "totalFlights" = .N), keyby = .(Origin,Dest)])
assign(df_name,get(df_name)[order(totalFlights, decreasing = T),])
#merging routes (adding count of flights in both ways on the same route/path)
df_1 <- get(df_name)[,.(Origin,Dest, totalFlights, "Route" = paste(Origin,Dest))]
df_2 <- get(df_name)[,.(totalFlights,
"Route" = paste(Dest,Origin))]
tmp <- merge.data.table(df_1,df_2,
by = c("Route"))
route <- tmp$Route
origin <- substring(route,1,3)
destination <- substring(route,5,7)
idx <-  (origin > destination)
tmp <- tmp[idx,]
tmp <- tmp[,.("totalFlights" = sum(totalFlights.x,totalFlights.y)),
keyby = .(Origin,Dest)]
tmp <- tmp[order(totalFlights,decreasing = T),]
cat("Second step complete\n")
s <- c("", y)
total_routes <- merge.data.table(total_routes,tmp,
all = T,
by = c("Origin", "Dest"),
suffixes = s)
cat("Third step complete\n")
rm(list = ls(pattern = df_name)) # we only need total_routes frame
gc()
cat("Cleaning complete\n")
}
total_routes <- total_routes[,
.("totalFlights" = sum(totalFlights,
totalFlights1997,
totalFlights1998,
totalFlights1999,
totalFlights2000,
totalFlights2001,
totalFlights2002,
totalFlights2003,
totalFlights2004,
totalFlights2005,
totalFlights2006,
totalFlights2007,
totalFlights2008,
na.rm = T)),
keyby = .(Origin,Dest)]
total_routes <- total_routes[order(totalFlights,decreasing = T)]
top_50 <- head(total_routes,50)
# adding coordinates of airports
origins_transformed <- merge.data.table(top_50, ap_transformed,
by.x = "Origin", by.y = "iata", suffixes = "Origin")
origins_transformed2 <- merge.data.table(origins_transformed,
ap_transformed,
by.x = "Dest", by.y = "iata",
suffixes = c("Origin", "Dest"))
total_ap <- merge.data.table(origins_transformed2[,.(Origin),
by = .(Origin, xOrigin,yOrigin)][,1:3],
origins_transformed2[,.(Dest),
by = .(Dest, xDest, yDest)][,1:3],
by.x = "Origin", by.y= "Dest", all = T)
total_ap <- total_ap[is.na(xOrigin), xOrigin:=xDest]
total_ap <- total_ap[is.na(yOrigin), yOrigin:=yDest]
total_ap <- total_ap[,.(Origin,xOrigin,yOrigin)]
# plot
plot_usmap() +
geom_segment(data = origins_transformed2,
aes(x = xOrigin, y = yOrigin, xend = xDest, yend = yDest,
linewidth = totalFlights),
color = "green") +
geom_segment(data = origins_transformed2,
aes(x = xOrigin, y = yOrigin, xend = xDest, yend = yDest),
color = "blue") +
geom_point(data = origins_transformed2, aes(x = xOrigin, y = yOrigin),
color = "blue", size = 5) +
geom_point(data = origins_transformed2, aes(x = xDest, y = yDest),
color = "blue", size = 5)+
geom_label_repel(data = total_ap,
aes(x = xOrigin, y = yOrigin, label = Origin),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle("50 najpopularniejszych tras lotniczych w latach 1996-2008") +
labs(linewidth = "Loty")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.title = element_text(face = "bold", size= 11),
legend.position = c(0.95, 0.4))
?geom_line
?geom_segment
?guide_legend
?geom_text_repel
#################tests
year_1996 <- read.csv(file.path("~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/",
paste("year_1996", ".csv", sep ="")))
library('usmap')
library('data.table')
library(ggplot2)
library(ggrepel)
rm(list = ls())
data_dir <-"~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/"
years_dir <- paste(data_dir,"pliczki/", sep = "")
airports <- as.data.table(read.csv(file.path(data_dir, "airports.csv")))
ap <- airports[airports$country == "USA", .("lon" = long, lat, iata)]
ap_transformed <- usmap_transform(ap)
###preparing first frame
df_1996 <- as.data.table(read.csv(file.path(years_dir,"1996.csv")))
df_1996 <- df_1996[, .( "totalFlights" = .N), keyby = .(Origin,Dest)]
df_1996 <- df_1996[order(totalFlights, decreasing = T),]
#merging routes (adding count of flights in both ways on the same route/path)
df_1 <- df_1996[,.(Origin,Dest, totalFlights, "Route" = paste(Origin,Dest))]
df_2 <- df_1996[,.(totalFlights,
"Route" = paste(Dest,Origin))]
total_routes <- merge.data.table(df_1,df_2,
by = c("Route")
)
route <- total_routes$Route
origin <- substring(route,1,3)
destination <- substring(route,5,7)
idx <-  (origin > destination)
total_routes <- total_routes[idx,]
total_routes <- total_routes[,.("totalFlights" = sum(totalFlights.x,totalFlights.y)),
keyby = .(Origin,Dest)]
total_routes <- total_routes[order(totalFlights,decreasing = T),]
s <- c(1996) # for setting suffixes in merge() function
for(y in 1997:2008){
cat(paste("current year: ", y,"\n", sep = ""))
df_name <- paste("df_", y, sep = "")
assign(df_name, as.data.table(read.csv(file.path(years_dir,
paste(y,
".csv",
sep = "")))))
cat("Reading data complete\n")
assign(df_name,get(df_name)[, .( "totalFlights" = .N), keyby = .(Origin,Dest)])
assign(df_name,get(df_name)[order(totalFlights, decreasing = T),])
#merging routes (adding count of flights in both ways on the same route/path)
df_1 <- get(df_name)[,.(Origin,Dest, totalFlights, "Route" = paste(Origin,Dest))]
df_2 <- get(df_name)[,.(totalFlights,
"Route" = paste(Dest,Origin))]
tmp <- merge.data.table(df_1,df_2,
by = c("Route"))
route <- tmp$Route
origin <- substring(route,1,3)
destination <- substring(route,5,7)
idx <-  (origin > destination)
tmp <- tmp[idx,]
tmp <- tmp[,.("totalFlights" = sum(totalFlights.x,totalFlights.y)),
keyby = .(Origin,Dest)]
tmp <- tmp[order(totalFlights,decreasing = T),]
cat("Second step complete\n")
s <- c("", y)
total_routes <- merge.data.table(total_routes,tmp,
all = T,
by = c("Origin", "Dest"),
suffixes = s)
cat("Third step complete\n")
rm(list = ls(pattern = df_name)) # we only need total_routes frame
gc()
cat("Cleaning complete\n")
}
total_routes <- total_routes[,
.("totalFlights" = sum(totalFlights,
totalFlights1997,
totalFlights1998,
totalFlights1999,
totalFlights2000,
totalFlights2001,
totalFlights2002,
totalFlights2003,
totalFlights2004,
totalFlights2005,
totalFlights2006,
totalFlights2007,
totalFlights2008,
na.rm = T)),
keyby = .(Origin,Dest)]
total_routes <- total_routes[order(totalFlights,decreasing = T)]
top_50 <- head(total_routes,50)
# adding coordinates of airports
origins_transformed <- merge.data.table(top_50, ap_transformed,
by.x = "Origin", by.y = "iata", suffixes = "Origin")
origins_transformed2 <- merge.data.table(origins_transformed,
ap_transformed,
by.x = "Dest", by.y = "iata",
suffixes = c("Origin", "Dest"))
total_ap <- merge.data.table(origins_transformed2[,.(Origin),
by = .(Origin, xOrigin,yOrigin)][,1:3],
origins_transformed2[,.(Dest),
by = .(Dest, xDest, yDest)][,1:3],
by.x = "Origin", by.y= "Dest", all = T)
total_ap <- total_ap[is.na(xOrigin), xOrigin:=xDest]
total_ap <- total_ap[is.na(yOrigin), yOrigin:=yDest]
total_ap <- total_ap[,.(Origin,xOrigin,yOrigin)]
# plot
plot_usmap() +
geom_segment(data = origins_transformed2,
aes(x = xOrigin, y = yOrigin, xend = xDest, yend = yDest,
linewidth = totalFlights),
color = "green") +
geom_segment(data = origins_transformed2,
aes(x = xOrigin, y = yOrigin, xend = xDest, yend = yDest),
color = "blue") +
geom_point(data = origins_transformed2, aes(x = xOrigin, y = yOrigin),
color = "blue", size = 5) +
geom_point(data = origins_transformed2, aes(x = xDest, y = yDest),
color = "blue", size = 5)+
geom_label_repel(data = total_ap,
aes(x = xOrigin, y = yOrigin, label = Origin),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
ggtitle("50 najpopularniejszych tras lotniczych w latach 1996-2008") +
labs(linewidth = "Loty")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.title = element_text(face = "bold", size= 11),
legend.position = c(0.95, 0.4))
rm(list = ls())
data_dir <-"~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Dane/"
years_dir <- paste(data_dir,"pliczki/", sep = "")
library(data.table)
library(ggplot2)
library(usmap)
library(gridExtra)
library(grid)
library('Dict')
can_stats <- read.csv(file.path(data_dir, "cancellationsStatsPerYear.csv"))
can_stats <- as.data.table(can_stats)
interesting_ones <- can_stats[GrThanCanPercMean == T, ]
length(interesting_ones$Year)
#interesting_ones <-  within(interesting_ones,rm(MostCanAt))
interesting_ones[,"MostCanAt"] <- as.Date("1 6 2023", format = "%d %m %Y")
for(y in 1:length(interesting_ones$Year)){
cat(paste("current year: ", interesting_ones$Year[y],"\n", sep = ""))
df_name <- paste("df_", interesting_ones$Year[y], sep = "")
assign(df_name, as.data.table(read.csv(paste(years_dir,
paste(interesting_ones$Year[y],
".csv",
sep = ""),
sep = ""))))
cat("Reading data complete\n")
tmp <- get(df_name)[Cancelled != 0,
.("FlightsCancelled" = .N),
keyby = .(Month, DayofMonth)]
tmp <- tmp[order(FlightsCancelled, decreasing = T)]
assign(paste(df_name, "_2", sep = ""), tmp[1,])
cat("First step of analysis complete\n")
m <- tmp[1, Month]
d <-tmp[1, DayofMonth]
interesting_ones[y,"MostCanAt"] <- as.Date(paste(d,m,interesting_ones$Year[y]),
format = "%d %m %Y")
tmp <- get(df_name)[Month == m & DayofMonth == d & Cancelled == 1,
.("Total" = .N),
keyby=.(Dest)]
tmp <- tmp[order(Total,decreasing = T)]
tmp2 <- get(df_name)[Month == m & DayofMonth == d,
.("All" = .N),
keyby=.(Dest)]
assign(df_name, merge.data.table(tmp,tmp2, by = "Dest", all.x = T, all.y = F))
cat("Second step of analysis complete\n")
gc()
}
airports <- as.data.table(read.csv(file.path(data_dir, "airports.csv")))
colnames(airports)
ap <- airports[airports$country == "USA", .("lon" = long, lat, iata)]
ap_transformed <- usmap_transform(ap)
rm(tmp)
test <- df_1996[,.(Dest,Total)]
s <- c(1996)
for (y in 2:length(interesting_ones$Year)){
current_year <- interesting_ones$Year[y]
df_name <- paste("df_", current_year, sep = "")
s <- c("", current_year)
test <- merge.data.table(test, get(df_name)[,.(Dest,Total)], by = "Dest", all.y = T, all.x = T,
suffixes = s)
}
colnames(test)[2] <- "Total1996"
max_flights <- max(sapply(test[,2:9], max, na.rm = T))
min_flights <- min(sapply(test[,2:9], min, na.rm = T))
for(y in 1:length(interesting_ones$Year)){
df_name <- paste("df_", interesting_ones$Year[y], sep = "")
dest_transformed <- merge.data.table(get(df_name), ap_transformed,
by.x = "Dest", by.y = "iata", suffixes = "Dest")
if(y == 7){
tmp <- plot_usmap() +
geom_point(data = dest_transformed, aes(x = x,
y = y,
size = Total,
alpha = Total),color = "blue") +
#    scale_fill_discrete(labels=c("Count"), ) +
scale_size(limits = c(min_flights,max_flights)) +
scale_alpha(limits = c(min_flights,max_flights)) +
ggtitle(paste(interesting_ones[Year == interesting_ones$Year[y], MostCanAt])) +
labs(size = "Loty", alpha = "Loty")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.position = c(-0.5,-0.2),
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))
} else {
tmp <- plot_usmap() +
geom_point(data = dest_transformed, aes(x = x,
y = y,
size = Total,
alpha = Total),color = "blue") +
#    scale_fill_discrete(labels=c("Count"), ) +
scale_size(limits = c(min_flights,max_flights)) +
scale_alpha(limits = c(min_flights,max_flights)) +
ggtitle(paste(interesting_ones[Year == interesting_ones$Year[y], MostCanAt])) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.position = "none")
#         legend.direction = "vertical",
#          legend.text = element_text(size = 10),
#          legend.title = element_text(size = 11))
}
assign(paste("p", y, sep = ""), tmp)
}
grid.arrange(
p1,
p2,
p3,
p4,
p5,
p6,
p7,
p8,
nrow = 2,
top = textGrob("Liczba odwołanych lotów w dniu: ",
gp = gpar(fontface = "bold", fontsize = 20),
y = 1, just = c(0.5, 3.0))
)
for(y in 1:length(interesting_ones$Year)){
df_name <- paste("df_", interesting_ones$Year[y], sep = "")
dest_transformed <- merge.data.table(get(df_name), ap_transformed,
by.x = "Dest", by.y = "iata", suffixes = "Dest")
if(y == 7){
tmp <- plot_usmap() +
geom_point(data = dest_transformed, aes(x = x,
y = y,
size = (Total/All)*100,
alpha = (Total/All)*100),color = "blue") +
#    scale_fill_discrete(labels=c("Count"), ) +
ggtitle(paste(interesting_ones[Year == interesting_ones$Year[y], MostCanAt])) +
labs(size = "Loty", alpha = "Loty")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.position = c(-0.5,-0.2),
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_text(size = 11))
} else {
tmp <- plot_usmap() +
geom_point(data = dest_transformed, aes(x = x,
y = y,
size = (Total/All)*100,
alpha = (Total/All)*100),color = "blue") +
#    scale_fill_discrete(labels=c("Count"), ) +
ggtitle(paste(interesting_ones[Year == interesting_ones$Year[y], MostCanAt])) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 16),
legend.position = "none")
#         legend.direction = "vertical",
#          legend.text = element_text(size = 10),
#          legend.title = element_text(size = 11))
}
assign(paste("p", y, sep = ""), tmp)
}
grid.arrange(
p1,
p2,
p3,
p4,
p5,
p6,
p7,
p8,
nrow = 2,
top = textGrob("Procent odwołanych lotów w dniu: ",
gp = gpar(fontface = "bold", fontsize = 20),
y = 1, just = c(0.5, 3.0))
)
##### part 2
cancellation_sources <- as.data.frame(LETTERS[1:4])
colnames(cancellation_sources) <- c("Code")
cancellation_sources['Total'] <- rep(0, times = 4)
data_dir <- "~/laby_PDU/Projekt_2_outer/Projekt_2_PDU/Krzysztof/R_code/saved/"
for(y in 2003:2008){
cat(paste("current year: ", y,"\n", sep = ""))
df_name <- paste("df2_", y, sep = "")
assign(df_name, as.data.table(read.csv(file.path(data_dir,
paste("df_",
y,
".csv",
sep = "")
)
)
)
)
cat("Reading data complete\n")
cancellation_sources["Total"] <-cancellation_sources$Total + get(df_name)[!is.na(CancellationCode), .(Count)]
gc()
}
#changing CancellationCode values
n_codes <- Dict$new(
"A" = "przewoźnik",
"B" = "pogoda",
"C" = "NAS",
"D" = "bezpieczeństwo")
for(row in 1:length(cancellation_sources$Code)){
value <- cancellation_sources$Code[row]
cancellation_sources$Code[row] <- n_codes$get(value)
}
ggplot(data = cancellation_sources,
aes(reorder(Code, Total), Total, fill = Code))+
geom_col() +
scale_y_continuous(expand = c(0, 0),
limits = c(0, max(cancellation_sources$Total) + 30000))+
geom_text(aes(label = Total),
angle = 0,
vjust = -0.5) +
theme_gray()+
ggtitle("Liczba odwołanych lotów o danym kodzie odwołania (suma z lat 2003:2008)")+
xlab("Kod odwołania")+
ylab("Loty")+
labs(fill = "Kod")+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size= 20),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text( family = "Arial"))
